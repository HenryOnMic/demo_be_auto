name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      mongo:
        image: mongo:6
        ports:
          - 27027:27017
        options: >-
          --health-cmd "mongosh --eval 'db.adminCommand(\'ping\')'" \
          --health-interval 10s \
          --health-timeout 5s \
          --health-retries 5
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Wait for MongoDB
        run: |
          for i in {1..10}; do
            nc -z localhost 27027 && echo MongoDB is up && break
            echo Waiting for MongoDB...
            sleep 3
          done
      - name: Run tests
        env:
          MONGO_URL: mongodb://localhost:27027
          MONGO_DB: test_demo14
        run: pytest --maxfail=1 --disable-warnings -q
      - name: Build Docker image
        run: docker build -f docker/Dockerfile -t demo_be_auto . 